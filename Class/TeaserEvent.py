import discord
from db.Events import TeaserEvent
from discord.ext import commands
from discord.commands import SlashCommandGroup, Option

from scripts.guilds import guild_data

guild_id = guild_data()["realistic"]


class TeaserEvents(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    teaser = SlashCommandGroup(guild_ids=[guild_id], name="teaser", description="‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏≠‡∏µ‡πÄ‡∏ß‡πâ‡∏ô‡∏ï‡∏≤‡∏°‡∏´‡∏≤‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô")


    @teaser.command(name="‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô", description="‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô")
    async def teaser_insert(
            self,
            ctx:discord.Interaction,
            title:Option(str,"‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Å‡∏≥‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô"),
            url:Option(str,"‡πÉ‡∏™‡πà link ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô")
            ):
        data = [
            title,
            url
        ]
        await ctx.response.defer(ephemeral=True, invisible=False)
        embed = discord.Embed(
            title=title,
            colour=discord.Colour.from_rgb(240, 96, 19)
        )
        embed.set_image(url=url)
        msg = await ctx.followup.send("‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô")

        await msg.edit(content=None, embed=embed, view=NewTeaser(self.bot, data))


    @commands.Cog.listener()
    async def on_ready(self):
        print(__class__.__name__, " is ready on server")


class NewTeaser(discord.ui.View):
    def __init__(self, bot, data):
        super(NewTeaser, self).__init__(timeout=None)
        self.bot = bot
        self.data = data

    @discord.ui.button(label="insert data", style=discord.ButtonStyle.success, emoji="üíæ",custom_id="save_to_teaser_db")
    async def save_to_teaser_db(self, button, interaction:discord.Interaction):
        button.disabled=False
        try:
            TeaserEvent().new(self.data[0], self.data[1])
        except Exception as e:
            return await interaction.response.send_message(e)
        else:
            await interaction.response.edit_message(content="‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡∏±‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢", embed=None, view=None)

