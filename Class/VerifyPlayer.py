import discord
from discord.utils import get
from discord.ext import commands
from discord.commands import SlashCommandGroup, Option

from db.users import Supporter
from scripts.guilds import guild_data


guild_id = guild_data()["realistic"]


class VerifyPlayerCommand(commands.Cog):
    def __init__(self, bot):
        self.bot = bot


    @commands.Cog.listener()
    async def on_ready(self):
        self.bot.add_view(VerifyButton(self.bot))

    verify = SlashCommandGroup(guild_ids=[guild_id], name="verify", description="‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏£‡∏±‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô")

    @verify.command(name="‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô", description="‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£ verify ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô")
    async def verify_commands(self, ctx:discord.Interaction, method:Option(str,"‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£", choices=["True", "False"])):
        member = ctx.user
        await ctx.response.defer(ephemeral=True, invisible=False)

        if method == "True":
            try:
                #‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô ‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏ó‡∏ö‡∏ó‡∏∏‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                if Supporter().check(member.id) == 1:
                    # show verify button for player
                    return await ctx.followup.send("‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå Exclusive Member ‡πÅ‡∏•‡πâ‡∏ß‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ")
                else:
                    pass
            except Exception as e:
                return await ctx.followup.send(e)
            else:
                return await ctx.followup.send("‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏õ‡πá‡∏ô Exclusive Member", view=VerifyButton(self.bot))


class VerifyButton(discord.ui.View):
    def __init__(self, bot):
        super(VerifyButton, self).__init__(timeout=None)
        self.bot = bot

    @discord.ui.button(label="Exclusive Verify", style=discord.ButtonStyle.secondary, emoji="üîì", custom_id="verify_players")
    async def verify_player_button(self, button, interaction:discord.Interaction):
        button.disabled=False
        await interaction.response.defer(ephemeral=True, invisible=False)

        try:
            total = Supporter().count()
        except Exception as e:
            print(e)
        else:
            await interaction.followup.send(total)