import datetime
import random

import discord

from Quests.db.Mission_db import Mission, UserMission
from db.users import Users


class GetMissionButton(discord.ui.View):
    def __init__(self):
        super(GetMissionButton, self).__init__(timeout=None)




    @discord.ui.button(label="‡∏Å‡∏î‡∏ó‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏∏‡πà‡∏°‡∏£‡∏±‡∏ö‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à‡∏£‡∏≤‡∏¢‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì", style=discord.ButtonStyle.secondary, disabled=True, custom_id="get_mission_disabled")
    async def get_mission_diabled(self, button, interaction):
        await interaction.response.send_message(button.label)

    @discord.ui.button(label="‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏∏‡πà‡∏°‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à", style=discord.ButtonStyle.secondary, emoji="üé≤", custom_id="get_mission_button")
    async def get_mission_button(self, button, interaction:discord.Interaction):
        member = interaction.user
        button.disabld=False
        mission_list = Mission().list_id()
        match = random.randint(1, len(mission_list))
        def expire_date():
            now = datetime.datetime.now()
            date_add = now + datetime.timedelta(days=3)
            start = now.strftime("%d/%m/%Y")
            end = date_add.strftime("%d/%m/%Y")
            date_list = [start, end]
            return date_list

        if Users().check(member.id) == 0:
            return await interaction.response.edit_message(content=f"{member.mention} ‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö Quest ‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü", embed=None, view=None)
        elif Users().wallet(member.id) < 50:
            return await interaction.response.edit_message(content=f"{member.mention} :üí≥ Wallet ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏•‡∏î‡∏•‡πä‡∏≠‡∏Ñ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ", embed=None, view=None)

        elif match in mission_list:
            data = Mission().get_mission_by_id(int(match))
            embed = discord.Embed(
                title="üì¶ {}".format(data[1]),
                description="‡∏ô‡∏≥‡∏™‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö Guild Master ‡∏ï‡∏≤‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á"
            )
            embed.add_field(name="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", value=data[3])
            embed.add_field(name="‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå", value=data[4])
            embed.add_field(name="‡πÄ‡∏á‡∏¥‡∏ô‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•", value=data[5])
            embed.add_field(name="‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à", value="{}".format(expire_date()[0]))
            embed.add_field(name="‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", value="{}".format(expire_date()[1]))
            embed.set_image(url=data[2])
            try:
                UserMission().new(member.id, data[1], data[2],data[4], data[5], expire_date()[0], expire_date()[1])
                old = Users().wallet(member.id)
                total = old - 50
                Users().wallet_update(member.id, total)
            except Exception as e:
                return await interaction.response.edit_message(content=e, embed=None, view=None)
            else:
                return await interaction.response.edit_message(content="‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö",embed=embed,view=None)