import discord
from discord.utils import get
from discord.ext import commands
from discord.commands import SlashCommandGroup, Option

from db.Ranking import Ranking
from func.config import update_cooldown, get_cooldown_time, img_, update_sys

from scripts.guilds import guild_data, roles_lists
from db.users import Users
from db.town import City
from views.Town.City import CityRegisterButton

guild_id = guild_data()["roleplay"]
commands_list = ["‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô", "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô", "‡∏õ‡∏£‡∏±‡∏ö‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó"]
permissions_roles = roles_lists()
class AdminCommand(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    admin = SlashCommandGroup(guild_ids=[guild_id], name="admin", description="‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô")
    database = SlashCommandGroup(guild_ids=[guild_id], name="database", description="‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")

    @admin.command(name="‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô", description="‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏ô‡∏î‡∏¥‡∏™‡∏Ñ‡∏≠‡∏£‡πå‡∏î‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå")
    async def manage_player(
            self,
            ctx:discord.Interaction,
            member:Option(discord.Member, "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô"),
            command:Option(str,"‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£", choices=commands_list),
            roles :Option(default=None, choices=permissions_roles)

    ):
        guild = ctx.guild
        member = guild.get_member(int(member.id))
        await ctx.response.defer(ephemeral=True, invisible=False)
        msg = await ctx.followup.send(f"‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ {command} ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö {member.mention}")
        if command == commands_list[2]:
            try:
                role = get(guild.roles,name=roles)
                if role:
                    await member.add_roles(role)
            except Exception as e:
                await msg.edit(content=e)
            return await msg.edit(content=f"‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏≥‡∏Å‡∏≤‡∏£ {command} {roles} ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö {member.mention} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")

    @admin.command(name="‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏π‡∏î‡∏≤‡∏ß‡∏ô‡πå‡∏Ç‡∏≠‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏î", description="‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ cooldown ‡∏Ç‡∏≠‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏î")
    async def manage_cooldown(
            self,
            ctx:discord.Interaction,
            amount:Option(int, "‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö ‡∏Ñ‡∏¥‡∏î‡πÄ‡∏õ‡πá‡∏ô ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")):
        await ctx.response.defer(ephemeral=True, invisible=False)
        try:
            update_cooldown(amount)
            await ctx.followup.send(f"‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö Cooldown Button ‡πÄ‡∏õ‡πá‡∏ô {get_cooldown_time()} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
        except Exception as e:
            await ctx.followup.send(e)

    @database.command(name="‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•", description="‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
    async def database_manager(
            self,
            ctx:discord.Interaction,
            db_name:Option(str, "‡∏£‡∏∞‡∏ö‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
    ):
        try:
            if db_name == "users":
                Users().drop_table()
                Users().create_table()
                return await ctx.response.send_message(f"reset {db_name} successfully...", ephemeral=True)
            elif db_name == "town":
                City().drop_table()
                City().create_table()
                return await ctx.response.send_message(f"reset {db_name} successfully...", ephemeral=True)
            elif db_name == "rank":
                Ranking().drop_table()
                Ranking().create_table()
                return await ctx.response.send_message(f"reset {db_name} successfully...", ephemeral=True)
            else:
                return await ctx.response.send_message(f"database -> ` {db_name} ` : ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö", ephemeral=True)
        except Exception as e:
            return await ctx.response.send_message(e, ephemeral=True)

    @admin.command(name="‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠", description="‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠")
    async def access_total(self,ctx:discord.Interaction):
        await ctx.response.send_message(Users().user_count()[0], ephemeral=True)


    @admin.command(name="‡∏õ‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü", description="‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå")
    async def access_approved(
            self,
            ctx:discord.Interaction,
            choise:Option(str, "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£", choices=["‡∏ñ‡∏≠‡∏ô‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå", "‡πÉ‡∏´‡πâ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå"]),
            member:Option(discord.Member, "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü")
    ):
        method = ["‡∏ñ‡∏≠‡∏ô‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå", "‡πÉ‡∏´‡πâ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå"]
        try:
            if choise == method[0]:
                Users().approved(member.id, 0)
                return await ctx.response.send_message(f"‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏õ‡∏•‡∏î‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö {member.mention} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)
            elif choise == method[1]:
                Users().approved(member.id, 1)
                return await ctx.response.send_message(f"‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö {member.mention} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)
        except Exception as e:
            return await ctx.response.send_message(e, ephemeral=True)

    @admin.command(name="‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÄ‡∏°‡∏∑‡∏≠‡∏á", description="‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÄ‡∏°‡∏∑‡∏≠‡∏á")
    async def town_reg(
            self,
            ctx:discord.Interaction
    ):
        guild = ctx.guild
        await ctx.defer(ephemeral=True, invisible=False)
        msg = await ctx.followup.send("‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì")
        try:
            cate_name = "COMMUNITY CITY"
            channel_name = "üìù-‡∏à‡∏î‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏Å‡∏£"
            overwrites={
                guild.default_role:discord.PermissionOverwrite(
                    send_messages=False,
                    view_channel=True
                )
            }
            cate = discord.utils.get(guild.categories, name=cate_name)
            if cate:
                channel = discord.utils.get(guild.channels, name=channel_name)
                if channel:
                    await channel.purge()
                    pass
            else:
                cate = await guild.create_category(name=cate_name, overwrites=overwrites)
                channel = await guild.create_text_channel(name=channel_name, category=cate)

        except Exception as e:
            return await msg.edit(content=e)
        else:
            embed = discord.Embed(
                title="üìù ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏î‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏û‡∏•‡πÄ‡∏°‡∏∑‡∏≠‡∏á",
                description="‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏•‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏Ç‡∏≠‡∏á 1 ‡πÉ‡∏ô 4 ‡πÄ‡∏°‡∏∑‡∏≠‡∏á ‡∏ã‡∏∂‡πà‡∏á‡πÑ‡∏î‡πâ‡πÅ‡∏Å‡πà\n"
                            "- City A ‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏°‡∏∑‡∏≠‡∏á Alexandria\n"
                            "- City B ‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏°‡∏∑‡∏≠‡∏á Kingdom\n"
                            "- City C ‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏°‡∏∑‡∏≠‡∏á Savior\n"
                            "- City D ‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏°‡∏∑‡∏≠‡∏á Commonwealth"
            )
            embed.set_image(url=img_("bran_reg"))
            await channel.send(embed=embed, view=CityRegisterButton(self.bot))
            return await msg.edit(content="‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")

    @admin.command(name="town",description="‡πÄ‡∏ä‡πá‡∏Ñ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏°‡∏∑‡∏≠‡∏á")
    async def town_count(
            self,
            ctx:discord.Interaction,
            city:Option(str,"‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πá‡∏Ñ")
                         ):
        await ctx.defer(ephemeral=True, invisible=False)
        msg = await ctx.followup.send(f"‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏°‡∏∑‡∏≠‡∏á {city}")
        return await msg.edit(content=City().citizen_count(city))

    @admin.command(name="citizen", description="‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏î‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏ú‡∏•‡πÄ‡∏°‡∏∑‡∏≠‡∏á")
    async def citizen_reg_check(
            self,
            ctx:discord.Interaction,
            member:Option(discord.Member, "‡∏£‡∏∞‡∏ö‡∏ö‡∏ú‡∏∏‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
    ):
        await ctx.defer(ephemeral=True, invisible=False)
        msg = await ctx.followup.send("‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô")
        try:
            if City().city(member.id) != 0:
                return await msg.edit(content=ctx.user.mention)

        except Exception as e:
            return await msg.edit(content=e)
        else:
            return await msg.edit(content=f"‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏î‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏û‡∏•‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏Ç‡∏≠‡∏á {ctx.user.display_name} ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö")



    @admin.command(name="‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô", description="‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô")
    async def register_system(self, ctx:discord.Interaction, method:Option(str, '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£', choices=["Open", "Close"])):
        try:
            update_sys(method)
        except Exception as e:
            return await ctx.response.send_message(e, ephemeral=True)
        else:
            return await ctx.response.send_message(f"{method} ‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)

def setup(bot):
    bot.add_cog(AdminCommand(bot))